AddIntellisense("CreateScriptedSpellShot", "Function", "Function in SpellManager.", "CreateScriptedSpellShot()", "SpellManager", "SpellManager.CreateScriptedSpellShot");
AddIntellisense("CreateScriptedSpellShotForcePushOnDeath", "Function", "Function in SpellManager.", "CreateScriptedSpellShotForcePushOnDeath()", "SpellManager", "SpellManager.CreateScriptedSpellShotForcePushOnDeath");
AddIntellisense("CreateScriptedSpellShotLongFireball", "Function", "Function in SpellManager.", "CreateScriptedSpellShotLongFireball()", "SpellManager", "SpellManager.CreateScriptedSpellShotLongFireball");
AddIntellisense("GetCurrentChargingSlotIdx", "Function", "Function in SpellManager.", "GetCurrentChargingSlotIdx()", "SpellManager", "SpellManager.GetCurrentChargingSlotIdx");
AddIntellisense("GetNumberOfShieldedSwords", "Function", "Function in SpellManager.", "GetNumberOfShieldedSwords()", "SpellManager", "SpellManager.GetNumberOfShieldedSwords");
AddIntellisense("IsAvailable", "Function", "Function in SpellManager.", "IsAvailable()", "SpellManager", "SpellManager.IsAvailable");
AddIntellisense("IsCharging", "Function", "Function in SpellManager.", "IsCharging()", "SpellManager", "SpellManager.IsCharging");
AddIntellisense("IsEntityAssassinsRushActive", "Function", "Function in SpellManager.", "IsEntityAssassinsRushActive()", "SpellManager", "SpellManager.IsEntityAssassinsRushActive");
AddIntellisense("RemoveEntityShieldedSwordsPercentage", "Function", "Function in SpellManager.", "RemoveEntityShieldedSwordsPercentage()", "SpellManager", "SpellManager.RemoveEntityShieldedSwordsPercentage");
AddIntellisense("ResetEntityInvokedMagicAffects", "Function", "Function in SpellManager.", "ResetEntityInvokedMagicAffects()", "SpellManager", "SpellManager.ResetEntityInvokedMagicAffects");
AddIntellisense("ResetEntityMagic", "Function", "Function in SpellManager.", "ResetEntityMagic()", "SpellManager", "SpellManager.ResetEntityMagic");
AddIntellisense("ResetEntityMagicAffects", "Function", "Function in SpellManager.", "ResetEntityMagicAffects()", "SpellManager", "SpellManager.ResetEntityMagicAffects");
AddIntellisense("ResetEntitySpellCastTable", "Function", "Function in SpellManager.", "ResetEntitySpellCastTable()", "SpellManager", "SpellManager.ResetEntitySpellCastTable");
AddIntellisense("SetEntityDeadRisingCreatureEntityName", "Function", "Function in SpellManager.", "SetEntityDeadRisingCreatureEntityName()", "SpellManager", "SpellManager.SetEntityDeadRisingCreatureEntityName");
AddIntellisense("SetEntityMagicEnabled", "Function", "Function in SpellManager.", "SetEntityMagicEnabled()", "SpellManager", "SpellManager.SetEntityMagicEnabled");
AddIntellisense("SetEntityShieldedSwordsNonDestructable", "Function", "Function in SpellManager.", "SetEntityShieldedSwordsNonDestructable()", "SpellManager", "SpellManager.SetEntityShieldedSwordsNonDestructable");
AddIntellisense("SetEntitySpellAllowModifyEnvTheme", "Function", "Function in SpellManager.", "SetEntitySpellAllowModifyEnvTheme()", "SpellManager", "SpellManager.SetEntitySpellAllowModifyEnvTheme");
AddIntellisense("SetEntitySpellsCanAffectNeutrals", "Function", "Function in SpellManager.", "SetEntitySpellsCanAffectNeutrals()", "SpellManager", "SpellManager.SetEntitySpellsCanAffectNeutrals");
AddIntellisense("SetEntitySpellTableItem", "Function", "Function in SpellManager.", "SetEntitySpellTableItem()", "SpellManager", "SpellManager.SetEntitySpellTableItem");
