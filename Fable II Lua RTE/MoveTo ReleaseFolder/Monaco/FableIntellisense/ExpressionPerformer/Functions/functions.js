AddIntellisense("AddDancer", "Function", "Function in ExpressionPerformer.", "AddDancer()", "ExpressionPerformer", "ExpressionPerformer.AddDancer");
AddIntellisense("DecrementCrowdSize", "Function", "Function in ExpressionPerformer.", "DecrementCrowdSize()", "ExpressionPerformer", "ExpressionPerformer.DecrementCrowdSize");
AddIntellisense("GetExpressionBeingPerformed", "Function", "Function in ExpressionPerformer.", "GetExpressionBeingPerformed()", "ExpressionPerformer", "ExpressionPerformer.GetExpressionBeingPerformed");
AddIntellisense("GetSweetness", "Function", "Function in ExpressionPerformer.", "GetSweetness()", "ExpressionPerformer", "ExpressionPerformer.GetSweetness");
AddIntellisense("IncrementCrowdSize", "Function", "Function in ExpressionPerformer.", "IncrementCrowdSize()", "ExpressionPerformer", "ExpressionPerformer.IncrementCrowdSize");
AddIntellisense("InterruptExpression", "Function", "Function in ExpressionPerformer.", "InterruptExpression()", "ExpressionPerformer", "ExpressionPerformer.InterruptExpression");
AddIntellisense("IsAvailable", "Function", "Function in ExpressionPerformer.", "IsAvailable()", "ExpressionPerformer", "ExpressionPerformer.IsAvailable");
AddIntellisense("IsExpressionAvailable", "Function", "Function in ExpressionPerformer.", "IsExpressionAvailable()", "ExpressionPerformer", "ExpressionPerformer.IsExpressionAvailable");
AddIntellisense("IsExtendedFailure", "Function", "Function in ExpressionPerformer.", "IsExtendedFailure()", "ExpressionPerformer", "ExpressionPerformer.IsExtendedFailure");
AddIntellisense("IsPerformingExpression", "Function", "Function in ExpressionPerformer.", "IsPerformingExpression()", "ExpressionPerformer", "ExpressionPerformer.IsPerformingExpression");
AddIntellisense("PerformExpression", "Function", "Function in ExpressionPerformer.", "PerformExpression()", "ExpressionPerformer", "ExpressionPerformer.PerformExpression");
AddIntellisense("PerformTrophyExpression", "Function", "Function in ExpressionPerformer.", "PerformTrophyExpression()", "ExpressionPerformer", "ExpressionPerformer.PerformTrophyExpression");
AddIntellisense("RemoveDancer", "Function", "Function in ExpressionPerformer.", "RemoveDancer()", "ExpressionPerformer", "ExpressionPerformer.RemoveDancer");
AddIntellisense("SetAllExpressionsAsUnavailable", "Function", "Function in ExpressionPerformer.", "SetAllExpressionsAsUnavailable()", "ExpressionPerformer", "ExpressionPerformer.SetAllExpressionsAsUnavailable");
AddIntellisense("SetCanPlayExpressionAvailableTutorials", "Function", "Function in ExpressionPerformer.", "SetCanPlayExpressionAvailableTutorials()", "ExpressionPerformer", "ExpressionPerformer.SetCanPlayExpressionAvailableTutorials");
AddIntellisense("SetExpressionAsAvailable", "Function", "Function in ExpressionPerformer.", "SetExpressionAsAvailable()", "ExpressionPerformer", "ExpressionPerformer.SetExpressionAsAvailable");
AddIntellisense("SetExpressionAsExtendable", "Function", "Function in ExpressionPerformer.", "SetExpressionAsExtendable()", "ExpressionPerformer", "ExpressionPerformer.SetExpressionAsExtendable");
AddIntellisense("SetExpressionRecordAsAvailable", "Function", "Function in ExpressionPerformer.", "SetExpressionRecordAsAvailable()", "ExpressionPerformer", "ExpressionPerformer.SetExpressionRecordAsAvailable");
AddIntellisense("ToggleDrawNoticeRadius", "Function", "Function in ExpressionPerformer.", "ToggleDrawNoticeRadius()", "ExpressionPerformer", "ExpressionPerformer.ToggleDrawNoticeRadius");
AddIntellisense("WasSweetSpotHit", "Function", "Function in ExpressionPerformer.", "WasSweetSpotHit()", "ExpressionPerformer", "ExpressionPerformer.WasSweetSpotHit");
